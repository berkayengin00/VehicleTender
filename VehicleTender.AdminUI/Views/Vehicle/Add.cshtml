
@{
    ViewBag.Title = "AddVehicle";
    Layout = "~/Views/shared/_AdminLayout.cshtml";

}
@using System.Web.UI.WebControls
@model VehicleTender.Entity.View.VehicleAddVMForAdmin
<div class="container">

    @using (@Html.BeginForm("Add", "Vehicle", FormMethod.Post, new { @class = "well form-horizontal", enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
    <fieldset class="row">

        <div class="form-group col-md-6">
            @Html.LabelFor(x => x.LicensePlate, new { @class = "col-md-4 control-label" })
            <div class="inputGroupContainer">
                <div class="input-group">
                    @Html.TextBoxFor(x => x.LicensePlate, new { @class = "form-control", required = true, PlaceHolder = "Plaka" })
                </div>
            </div>
        </div>

        <div class="form-group col-md-6">
            @Html.LabelFor(x => x.UserTypeId, new { @class = "col-md-4 control-label" })
            <div class="inputGroupContainer">
                <div class="input-group">
                    @Html.DropDownListFor(x => x.UserTypeId, @ViewBag.UserTypeList as List<SelectListItem> ,"Seçim Yapınız", new { @class = "form-select", required = true })
                </div>
            </div> 
        </div>


        <div class="form-group col-md-6">
            @Html.LabelFor(x => x.UserId, new { @class = "col-md-4 control-label" })
            <div class="inputGroupContainer">
                <div class="input-group">
                    @Html.DropDownListFor(x => x.UserId, new List<SelectListItem>(),new { @class = "form-select", required = true ,disabled=true})
                </div>
            </div>
        </div>

        <div class="form-group col-md-6">
            @Html.LabelFor(x => x.BrandId, new { @class = "col-md-4 control-label" })
            <div class="inputGroupContainer">
                <div class="input-group">
                    @Html.DropDownListFor(x => x.BrandId, Model.VehicleFeaturesForCache.Brands,"Marka Seçiniz" ,new { @class = "form-select", required = true })
                </div>
            </div>
        </div>

        <!-- Text input-->

        <div class="form-group col-md-6">
            @Html.LabelFor(x => x.ModelId, new { @class = "col-md-4 control-label" })
            <div class="inputGroupContainer">
                <div class="input-group">
                    @Html.DropDownListFor(x => x.ModelId, Model.VehicleFeaturesForCache.Models, new { @class = "form-select", required = true ,disabled=true})
                </div>
            </div>
        </div>

        <!-- Text input-->
        <div class="form-group col-md-6">
            @Html.LabelFor(x => x.BodyTypeId, new { @class = "col-md-4 control-label" })
            <div class="inputGroupContainer">
                <div class="input-group">
                    @Html.DropDownListFor(x => x.BodyTypeId, Model.VehicleFeaturesForCache.BodyTypes, new { @class = "form-select", required = true })
                </div>
            </div>
        </div>


        <!-- Text input-->

        <div class="form-group col-md-6">
            @Html.LabelFor(x => x.FuelTypeId, new { @class = "col-md-4 control-label" })
            <div class="inputGroupContainer">
                <div class="input-group">
                    @Html.DropDownListFor(x => x.FuelTypeId, Model.VehicleFeaturesForCache.FuelTypes, new { @class = "form-select", required = true })
                </div>
            </div>
        </div>

        <div class="form-group col-md-6">
            @Html.LabelFor(x => x.GearTypeId, new { @class = "col-md-4 control-label" })
            <div class="inputGroupContainer">
                <div class="input-group">
                    @Html.DropDownListFor(x => x.GearTypeId, Model.VehicleFeaturesForCache.GearTypes, new { @class = "form-select", required = true })
                </div>
            </div>
        </div>

        <div class="form-group col-md-6">
            @Html.LabelFor(x => x.ColorId, new { @class = "col-md-4 control-label" })
            <div class="inputGroupContainer">
                <div class="input-group">
                    @Html.DropDownListFor(x => x.ColorId, Model.VehicleFeaturesForCache.Colors, new { @class = "form-select", required = true })
                </div>
            </div>
        </div>

        <div class="form-group col-md-6">
            @Html.LabelFor(x => x.KiloMeter, new { @class = "col-md-4 control-label" })
            <div class="inputGroupContainer">
                <div class="input-group">
                    <span class="input-group-text" id="basic-addon1"><i class="fa fa-car" aria-hidden="true"></i></span>
                    @Html.TextBoxFor(x => x.KiloMeter, new { @class = "form-control", Type = "number", placeholder = "Kilometre Bilgisi", required = "true" })
                </div>
            </div>
        </div>

        <div class="form-group col-md-6">
            @Html.LabelFor(x => x.Version, new { @class = "col-md-4 control-label" })
            <div class="inputGroupContainer">
                <div class="input-group">
                    <span class="input-group-text" id="basic-addon1"><i class="fa fa-car" aria-hidden="true"></i></span>
                    @Html.TextBoxFor(x => x.Version, new { @class = "form-control", Type = "text", placeholder = "Versiyon Bilgisi", required = "true" })
                </div>
            </div>
        </div>

        <div class="form-group col-md-6">
            @Html.LabelFor(x => x.VehicleYear, new { @class = "col-md-4 control-label" })
            <div class="inputGroupContainer">
                <div class="input-group">
                    <span class="input-group-text" id="basic-addon1"><i class="fa fa-car" aria-hidden="true"></i></span>
                    @Html.TextBoxFor(x => x.VehicleYear, new { @class = "form-control", Type = "number", placeholder = "Model Yılı", required = "true" })
                </div>
            </div>
        </div>
        
        <div class="form-group col-md-6">
	        @Html.LabelFor(x => x.VehiclePrice, new { @class = "col-md-4 control-label" })
	        <div class="inputGroupContainer">
		        <div class="input-group">
			        <span class="input-group-text" id="basic-addon1"><i class="fa fa-car" aria-hidden="true"></i></span>
			        @Html.TextBoxFor(x => x.VehiclePrice, new { @class = "form-control", Type = "number", placeholder = "Fiyat", required = "true" })
		        </div>
	        </div>
        </div>

        <div class="form-group col-md-12">
            @Html.LabelFor(x => x.Description, new { @class = "col-md-4 control-label" })
            <div class="inputGroupContainer">
                <div class="input-group">
                    <span class="input-group-text" id="basic-addon1"><i class="fa fa-asterisk" aria-hidden="true"></i></span>
                    @Html.TextAreaFor(x => x.Description, new { @class = "form-control", Type = "text-area", placeholder = "Ek Özellikler", required = "true" })
                </div>
            </div>
        </div>

        <div class="form-group col-md-12">
            <input type="file" class="form-control" multiple name="Images" />
        </div>



        @*<div class="form-group col-md-12">
            <div class="card card-default">
                <div class="card-header">
                    <h3 class="card-title">Araç Görsellerini Ekle<small><em>(Zorunlu Değil)</em></small></h3>
                </div>
                <div class="card-body">
                    <div id="actions" class="row">
                        <div class="col-lg-6">
                            <div class="btn-group w-100">
                                <span class="btn btn-success col fileinput-button">
                                    <i class="fas fa-plus"></i>
                                    <span>Add files</span>
                                </span>
                                <button type="submit" class="btn btn-primary col start">
                                    <i class="fas fa-upload"></i>
                                    <span>Start upload</span>
                                </button>
                                <button type="reset" class="btn btn-warning col cancel">
                                    <i class="fas fa-times-circle"></i>
                                    <span>Cancel upload</span>
                                </button>
                            </div>
                        </div>
                        <div class="col-lg-6 d-flex align-items-center">
                            <div class="fileupload-process w-100">
                                <div id="total-progress" class="progress progress-striped active" role="progressbar" aria-valuemin="0" aria-valuemax="100" aria-valuenow="0">
                                    <div class="progress-bar progress-bar-success" style="width:0%;" data-dz-uploadprogress></div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="table table-striped files" id="previews">
                        <div id="template" class="row mt-2">
                            <div class="col-auto">
                                <span class="preview"><img src="data:," alt="" data-dz-thumbnail /></span>
                            </div>
                            <div class="col d-flex align-items-center">
                                <p class="mb-0">
                                    <span class="lead" data-dz-name></span>
                                    (<span data-dz-size></span>)
                                </p>
                                <strong class="error text-danger" data-dz-errormessage></strong>
                            </div>
                            <div class="col-4 d-flex align-items-center">
                                <div class="progress progress-striped active w-100" role="progressbar" aria-valuemin="0" aria-valuemax="100" aria-valuenow="0">
                                    <div class="progress-bar progress-bar-success" style="width:0%;" data-dz-uploadprogress></div>
                                </div>
                            </div>
                            <div class="col-auto d-flex align-items-center">
                                <div class="btn-group">
                                    <button class="btn btn-primary start">
                                        <i class="fas fa-upload"></i>
                                        <span>Start</span>
                                    </button>
                                    <button data-dz-remove class="btn btn-warning cancel">
                                        <i class="fas fa-times-circle"></i>
                                        <span>Cancel</span>
                                    </button>
                                    <button data-dz-remove class="btn btn-danger delete">
                                        <i class="fas fa-trash"></i>
                                        <span>Delete</span>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="card-footer">
                </div>
            </div>

        </div>*@
        
        <div class="form-group col-md-12">
	        <input type="submit" name="name" value="Kaydet" class="btn btn-outline-success col-md-3 mr-5" id="kaydet" />
            @if (Session["Tramer"]==null)
            {
	            @Html.ActionLink("Tramer Ekle","Add","Tramer",null, new {@class= "btn btn-primary col-md-3" })
            }
            else
            {
	           <input type="button" value="Tramer Kaydı Eklendi" disabled class="btn btn-primary col-md-3"/>
            }
	       
        </div>
        </fieldset>


    }
</div>

@section jscode
{

    <!-- dropzonejs -->
    <script src="~/TemplateContent/plugins/dropzone/min/dropzone.min.js"></script>

    <script>
        //// DropzoneJS Demo Code Start
        //Dropzone.autoDiscover = false

        //// Get the template HTML and remove it from the doumenthe template HTML and remove it from the doument
        //var previewNode = document.querySelector("#template")
        //previewNode.id = ""
        //var previewTemplate = previewNode.parentNode.innerHTML
        //previewNode.parentNode.removeChild(previewNode)

        //var myDropzone = new Dropzone(document.body, { // Make the whole body a dropzone
        //    url: "/target-url", // Set the url
        //    thumbnailWidth: 60,
        //    thumbnailHeight: 60,
        //    parallelUploads: 20,
        //    previewTemplate: previewTemplate,
        //    autoQueue: false, // Make sure the files aren't queued until manually added
        //    previewsContainer: "#previews", // Define the container to display the previews
        //    clickable: ".fileinput-button" // Define the element that should be used as click trigger to select files.
        //})

        //myDropzone.on("addedfile", function (file) {
        //    // Hookup the start button
        //    file.previewElement.querySelector(".start").onclick = function () { myDropzone.enqueueFile(file) }
        //})

        //// Update the total progress bar
        //myDropzone.on("totaluploadprogress", function (progress) {
        //    document.querySelector("#total-progress .progress-bar").style.width = progress + "%"
        //})

        //myDropzone.on("sending", function (file) {
        //    // Show the total progress bar when upload starts
        //    document.querySelector("#total-progress").style.opacity = "1"
        //    // And disable the start button
        //    file.previewElement.querySelector(".start").setAttribute("disabled", "disabled")
        //})

        //// Hide the total progress bar when nothing's uploading anymore
        //myDropzone.on("queuecomplete", function (progress) {
        //    document.querySelector("#total-progress").style.opacity = "0"
        //})

        //// Setup the buttons for all transfers
        //// The "add files" button doesn't need to be setup because the config
        //// `clickable` has already been specified.
        //document.querySelector("#actions .start").onclick = function () {
        //    myDropzone.enqueueFiles(myDropzone.getFilesWithStatus(Dropzone.ADDED))
        //}
        //document.querySelector("#actions .cancel").onclick = function () {
        //    myDropzone.removeAllFiles(true)
        //}
        //  // DropzoneJS Demo Code End

        $(function () {
            $("#BrandId").change(function () {
                var selectedBrandId = $(this).val();
                ModelId.disabled = false;
                $.ajax({
                    url: "/Vehicle/GetModelByBrand",
                    type: "GET",
                    data: { brandId: selectedBrandId },
                    success: function (data) {
                        var modelsSelect = $("#ModelId");
                        modelsSelect.empty();
                        debugger;
                        $.each(data, function (index, model) {
                            modelsSelect.append($('<option/>', {
                                value: model.Value,
                                text: model.Text
                            }));
                        });
                    }
                });
            });
        });


        $(function () {
            $("#UserTypeId").change(function () {                
                var typeId = $(this).val();
                UserId.disabled = false;
                $.ajax({
                    url: "/Vehicle/GetUsersByUserType",
                    type: "GET",
                    data: { userTypeId: typeId },
                    success: function (data) {                        
                        debugger;
                        var modelsSelect = $("#UserId");
                        modelsSelect.empty();
                        $.each(data, function (index, model) {
                            modelsSelect.append($('<option/>', {
                                value: model.Value,
                                text: model.Text
                            }));
                        });
                    }
                });
            });
        });



    </script>
}
